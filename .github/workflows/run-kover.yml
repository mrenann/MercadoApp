name: Code Coverage Check

on:
  pull_request:
    branches:
      - master

# Adiciona permissões necessárias para comentar em PRs
permissions:
  contents: read
  pull-requests: write

jobs:
  kover_check:
    name: Kover Coverage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run Kover Coverage Analysis
        id: kover
        run: |
          # Executa o relatório Kover e captura a saída
          ./gradlew koverXmlReport
          
          # Método alternativo: usa a saída do koverVerify para obter a porcentagem
          COVERAGE_OUTPUT=$(./gradlew koverVerify --debug | grep -m 1 -oE 'Covered by tests: ([0-9\.]+)%' || echo "Covered by tests: 0%")
          COVERAGE_PERCENTAGE=$(echo "$COVERAGE_OUTPUT" | grep -oE '[0-9\.]+' || echo "0")
          
          # Arredonda para número inteiro
          COVERAGE_PERCENTAGE=$(printf "%.0f" "$COVERAGE_PERCENTAGE")
          
          # Define a saída para uso em etapas posteriores
          echo "coverage=$COVERAGE_PERCENTAGE" >> $GITHUB_OUTPUT
          echo "Cobertura final: $COVERAGE_PERCENTAGE%"

      - name: Kover Verification
        run: ./gradlew koverVerify || true  # Continua mesmo se falhar na verificação

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Cobertura de Código

      - name: Determine Status Icon
        id: status
        run: |
          COVERAGE=${{ steps.kover.outputs.coverage }}
          if [ $COVERAGE -ge 50 ]; then
            echo "icon=✅ Esta PR atende aos requisitos mínimos de cobertura." >> $GITHUB_OUTPUT
          else
            echo "icon=❌ Esta PR não atende aos requisitos mínimos de cobertura." >> $GITHUB_OUTPUT
          fi

      - name: Create or Update Coverage Comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 📊 Cobertura de Código: ${{ steps.kover.outputs.coverage }}%
            
            **Requisito mínimo:** 50%
            
            ${{ steps.status.outputs.icon }}
            
            *Os seguintes padrões foram excluídos da análise:*
            - Classes anotadas com `@Composable` e `@Preview`
            - Pacotes de telas e componentes de UI
            - Pacotes de temas e injeção de dependência
          edit-mode: replace
