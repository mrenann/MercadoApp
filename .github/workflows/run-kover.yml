name: Test Coverage

on:
  pull_request:
    branches: [ master ]

jobs:
  test-coverage:
    name: Run Tests and Report Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Run tests with Kover
        run: ./gradlew koverXmlReport

      - name: Extract coverage from report
        id: extract_coverage
        run: |
          FILE="build/reports/kover/report.xml"
          if [ ! -f "$FILE" ]; then
            echo "‚ùå Arquivo de cobertura n√£o encontrado."
            echo "coverage=0" >> $GITHUB_OUTPUT
            exit 0
          fi

          COVERED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@covered)" $FILE)
          MISSED=$(xmllint --xpath "string(//report/counter[@type='INSTRUCTION']/@missed)" $FILE)
          TOTAL=$((COVERED + MISSED))
          if [ "$TOTAL" -eq 0 ]; then
            echo "Nenhum dado de cobertura encontrado."
            echo "coverage=0" >> $GITHUB_OUTPUT
          else
            PERCENT=$((COVERED * 100 / TOTAL))
            echo "üìä Cobertura de Testes: $PERCENT%"
            echo "coverage=$PERCENT" >> $GITHUB_OUTPUT
          fi

      - name: Comentar cobertura no PR
        if: ${{ github.event.pull_request != '' }}
        uses: actions/github-script@v7
        env:
          COVERAGE: ${{ steps.extract_coverage.outputs.coverage }}
          GH_TOKEN: ${{ secrets.PR_COMMENT_TOKEN }}
        with:
          script: |
            const pr = context.payload.pull_request?.number;
            if (!pr) {
              console.log("Esse workflow n√£o foi disparado por um PR.");
              return;
            }

            const body = `üìä **Cobertura de Testes:** \`${process.env.COVERAGE}%\` ${process.env.COVERAGE >= 80 ? '‚úÖ' : process.env.COVERAGE >= 50 ? '‚ö†Ô∏è' : '‚ùå'}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body: body,
            });
